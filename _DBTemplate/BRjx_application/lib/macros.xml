<macros id="175c9043-0cc4-4165-bdb1-eb66fc13457f">
  <records>
    <record id="ce8b685f-b54e-4f58-aca1-4fbf389a0941">
      <path></path>
      <name>getBRjxProperties</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array">
        <property>$dbname</property>
      </properties>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
json:serialize(element json {attribute type {'object'}, db:open($dbname)/BRjx/*})
]]>
      </script>
    </record>
    <record id="2ebe1750-57f4-4b51-9d23-9e8cc4eb92c9">
      <path></path>
      <name>setBRjxProperty</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array">
        <property>$dbname</property>
        <property>$key</property>
        <property>$value</property>
      </properties>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
declare variable $key as xs:string external;
declare variable $value as xs:string external;
insert node (element {$key} {$value}) as first into db:open($dbname)/BRjx/properties
]]>
      </script>
    </record>
    <record id="e6122b0e-3b64-43fa-8027-59b5903c62c3">
      <path></path>
      <name>getRecords</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array">
        <property>$dbname</property>
        <property>$tableid</property>
      </properties>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
declare variable $tableid as xs:string external;
let $database := db:open($dbname)
return json:serialize(
  element json {
    attribute type {"array"},
      for $r in $database/*[./id = $tableid]/records/property
        (:where expression:)
          return $r
  }
)]]>
      </script>
    </record>
    <record id="2898c1bd-6e5b-4394-bc1c-4806f2b76d44">
      <path></path>
      <name>script0</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array"/>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
json:serialize(element json {attribute type {'array'}, db:open($dbname)/run/records/_[./rc/text()='boot']/command/*})
]]>
      </script>
    </record>
    <record id="d2be28f2-b809-40ec-9e6c-fdbc6ba56835">
      <path></path>
      <name>script1</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array"/>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
json:serialize(element json {attribute type {'object'}, db:open($dbname)/BRjx/*})
]]>
      </script>
    </record>
    <record id="1518ef74-3c85-4df4-b4ce-09de315cc617">
      <path></path>
      <name>script2</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array"/>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
json:serialize(element json {attribute type {'object'}, db:open($dbname)/main/app/*})
]]>
      </script>
    </record>
    <record id="cdb2ef22-f8aa-4134-8126-d91970994b9b">
      <path></path>
      <name>script3</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array"/>
      <script>
<![CDATA[
declare variable $dbname as xs:string external;
json:serialize(element json {
  attribute type {'object'},
  element commands {
    attribute type {'object'},
    for $n in db:open($dbname)/commands/records/_
      return 
        element {$n/name/text()} {
          attribute type {'object'}, 
          $n/properties,
          $n/script
        }
  }
})]]>
      </script>
    </record>
    <record id="cdb2ef22-f8aa-4134-8126-d91970994b9b">
      <path></path>
      <name>script4</name>
      <type>xq</type>
      <version>0.0.1</version>
      <properties type="array"/>
      <script>
<![CDATA[
let $doc := <simple:root xmlns:simple='http://basex.org/simple'/>
let $schema :=
  <xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' targetNamespace='http://basex.org/simple'>
    <xs:element name='root'/>
  </xs:schema>
let $version := '1.1'
return validate:xsd-report($doc, $schema, $version)
})]]>
      </script>
    </record>
  </records>
</macros>